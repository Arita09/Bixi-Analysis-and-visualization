<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='trips+ (bixi-data)' inline='true' name='federated.0kodhn70nlobl51b7p4251q4ikn0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Localhost' name='mysql.1wr8us515t9i1z12vurl81gnlkjf'>
            <connection class='mysql' dbname='bixi-data' odbc-native-protocol='' one-time-sql='' port='3306' server='Localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.1wr8us515t9i1z12vurl81gnlkjf' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.1wr8us515t9i1z12vurl81gnlkjf' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.1wr8us515t9i1z12vurl81gnlkjf' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.1wr8us515t9i1z12vurl81gnlkjf' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_2E18EF021E194A62979D018F45A6F141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]&quot;' value='2.99$ / 30 mins Trips' />
          <alias key='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921227604006:qk]&quot;' value='4.79$/ 30 to 45 mins trips' />
          <alias key='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921228005415:qk]&quot;' value='7.79$/ 45 to 60 mins Trips' />
        </aliases>
      </column>
      <column caption='Percentage trip by memebrs' datatype='integer' name='[Calculation_1778358919574630405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [is_member] = 1 : COUNT([__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141])}' />
      </column>
      <column caption='Round Trips' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1778358919737839627]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN &apos;RoundTrip&apos; END' />
      </column>
      <column caption='Members' datatype='string' name='[Calculation_1778358919750131724]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [is_member]=1 THEN &quot;Member&quot; END' />
        <aliases>
          <alias key='%null%' value='Non Members' />
        </aliases>
      </column>
      <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
      </column>
      <column caption='percentage of round trips ' datatype='real' name='[Calculation_1778358920648392721]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_1778358919737839627])/COUNT([__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141])*100' />
      </column>
      <column caption='percentage  M. Trips' datatype='real' name='[Calculation_1778358920988852243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_1778358919574630405])/COUNT([__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]) *100' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_1778358921014439962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([is_member])/COUNT([is_member])*100' />
      </column>
      <column caption='Duration Minnn' datatype='real' name='[Calculation_1778358921021386786]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/24/60' />
      </column>
      <column caption='2.99$' datatype='real' name='[Calculation_1778358921195110436]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 30 THEN 2.99  END' />
      </column>
      <column caption='4.79$' datatype='real' name='[Calculation_1778358921227604006]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 45 AND [duration_sec]/60 &gt;30 THEN 4.79  END' />
      </column>
      <column caption='7.79$' datatype='real' name='[Calculation_1778358921228005415]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 60 AND [duration_sec]/60 &gt;45 THEN 7.79  END' />
      </column>
      <column caption='Duration Min' datatype='real' name='[Calculation_1778358921235402792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column caption='Duritaion Hour' datatype='real' name='[Calculation_1778358921287581737]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1778358921235402792]/60' />
      </column>
      <column caption='Revenue ' datatype='real' name='[Calculation_1778358921406799914]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 30 Then 2.99&#13;&#10;ELSEIF  [duration_sec]/60 &lt;= 45 AND [duration_sec]/60 &gt;30 THEN 4.79 &#13;&#10;ELSEIF [duration_sec]/60 &lt;= 60 AND [duration_sec]/60 &gt;45 THEN 7.79  END' />
      </column>
      <column caption='Duration Minnn (bin)' datatype='integer' name='[Duration Min (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[Calculation_1778358921021386786]' peg='0' size='0.095' />
      </column>
      <column datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[duration_sec]' peg='0' size='136' />
      </column>
      <column caption='Duration Min (bin)' datatype='integer' name='[TEST (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_1778358921235402792]' peg='0' size='2.3' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[diff:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[rank:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[win:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Columns' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358919574630405]' derivation='Count' name='[cnt:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[cum:cnt:Calculation_1778358919737839627:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[diff:cnt:Calculation_1778358919737839627:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[diff:sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[diff:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1778358919737839627]' derivation='None' name='[none:Calculation_1778358919737839627:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1778358919750131724]' derivation='None' name='[none:Calculation_1778358919750131724:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1778358919845888013]' derivation='None' name='[none:Calculation_1778358919845888013:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[is_member]' derivation='None' name='[none:is_member:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>&quot;Member&quot;</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>%null%</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcdf:cnt:Calculation_1778358919737839627:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[start_date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[start_date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcdf:sum:Calculation_1778358921195110436:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcdf:sum:Calculation_1778358921195110436:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcdf:sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcdf:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Attribute' name='[pcrk:attr:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Ascending' type='PctRank'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919750131724]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcrk:cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Ascending' type='PctRank'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='PaneCol' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcrk:sum:Calculation_1778358919574630405:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcrk:sum:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcrk:sum:Calculation_1778358921195110436:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcrk:sum:Calculation_1778358921195110436:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcrk:sum:Calculation_1778358921195110436:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='PaneCol' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcrk:sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Ascending' type='PctRank'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='PaneCol' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcrk:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcto:cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <sort direction='DESC' using='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:code:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <sort direction='ASC' using='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:code:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcto:sum:Calculation_1778358919574630405:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcto:sum:Calculation_1778358919574630405:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcto:sum:Calculation_1778358919574630405:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcto:sum:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Calculation_1778358919845888013]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921227604006]' derivation='Sum' name='[pcto:sum:Calculation_1778358921227604006:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921227604006]' derivation='Sum' name='[pcto:sum:Calculation_1778358921227604006:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921228005415]' derivation='Sum' name='[pcto:sum:Calculation_1778358921228005415:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358921228005415]' derivation='Sum' name='[pcto:sum:Calculation_1778358921228005415:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcto:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcva:cnt:Calculation_1778358919737839627:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcva:cnt:Calculation_1778358919737839627:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcva:cnt:Calculation_1778358919737839627:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[name]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[pcva:cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcva:sum:Calculation_1778358921195110436:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcva:sum:Calculation_1778358921195110436:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcva:sum:Calculation_1778358921195110436:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcva:sum:Calculation_1778358921195110436:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcva:sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' type='PctValue'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' type='PctValue'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' type='PctValue'>
          <address>
            <value>2017</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:14]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' type='PctValue'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:15]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' type='PctValue'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:16]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' level-address='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' type='PctValue'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
          <address>
            <value>11</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:17]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' type='PctValue'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='PaneCol' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctValue'>
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
          <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[pcva:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[rank:cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[sum:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358921227604006]' derivation='Sum' name='[sum:Calculation_1778358921227604006:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358921228005415]' derivation='Sum' name='[sum:Calculation_1778358921228005415:qk]' pivot='key' type='quantitative' />
      <column-instance column='[code]' derivation='Sum' name='[sum:code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[duration_sec]' derivation='Sum' name='[sum:duration_sec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Week-Trunc' name='[twk:start_date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1778358920648392721]' derivation='User' name='[usr:Calculation_1778358920648392721:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1778358920988852243]' derivation='User' name='[usr:Calculation_1778358920988852243:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[win:cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Columns' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[is_member]' derivation='Sum' name='[win:sum:is_member:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Members,Name)' hidden='true' name='[Action (Members,Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1778358919750131724]' />
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <group caption='Action (Name,Start Station Code)' hidden='true' name='[Action (Name,Start Station Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[name]' />
          <groupfilter function='level-members' level='[start_station_code]' />
        </groupfilter>
      </group>
      <group caption='Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))' hidden='true' name='[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1778358919845888013]' />
          <groupfilter function='level-members' level='[hr:start_date:ok]' />
          <groupfilter function='level-members' level='[wd:start_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Start Date),MONTH(Start Date))' hidden='true' name='[Action (YEAR(Start Date),MONTH(Start Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:start_date:ok]' />
          <groupfilter function='level-members' level='[mn:start_date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Non Members,WEEK(Start Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1778358919845888013:nk]' />
          <groupfilter function='level-members' level='[twk:start_date:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919574630405:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919737839627:nk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:attr:Calculation_1778358919574630405:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919574630405:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:9]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:Calculation_1778358919574630405:qk:6]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:Calculation_1778358919574630405:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358919574630405:qk:2]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358919574630405:qk:9]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358919574630405:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358919574630405:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358920648392721:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921003667477:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921003704342:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921003884567:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921004224536:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921004445721:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019060257:qk]&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921228005415:qk]&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921228005415:qk]&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[diff:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[rank:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[win:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:8]&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921227604006:qk]&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921228005415:qk:1]&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921227604006:qk]&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:duration_sec:qk]&quot;</bucket>
            </map>
            <map to='#93cdcf'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921227604006:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919737839627:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358921026986019:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[cum:cnt:Calculation_1778358919737839627:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[diff:cnt:Calculation_1778358919737839627:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[diff:sum:Calculation_1778358921195110436:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[diff:sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:7]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:8]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:cnt:Calculation_1778358919737839627:qk:9]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:sum:Calculation_1778358921195110436:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:sum:Calculation_1778358921195110436:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:sum:Calculation_1778358921195110436:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcdf:sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk:3]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk:7]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk:8]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:cnt:Calculation_1778358919737839627:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:Calculation_1778358921195110436:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:Calculation_1778358921195110436:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:Calculation_1778358921195110436:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:Calculation_1778358921195110436:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:3]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:7]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk:8]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcrk:sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:3]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk:8]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:Calculation_1778358919737839627:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358919574630405:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:3]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:7]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:Calculation_1778358919737839627:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:Calculation_1778358919737839627:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:Calculation_1778358919737839627:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:cnt:Calculation_1778358919737839627:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:Calculation_1778358921195110436:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:Calculation_1778358921195110436:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:Calculation_1778358921195110436:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:Calculation_1778358921195110436:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:Calculation_1778358921195110436:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:10]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:11]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:12]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:13]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:14]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:15]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:16]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:17]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:2]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:4]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:5]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:6]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:7]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:8]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk:9]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcva:sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[rank:cnt:Calculation_1778358919737839627:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358920988852243:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[win:cnt:Calculation_1778358919737839627:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[win:sum:is_member:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1778358919750131724:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#76af56'>
              <bucket>&quot;Member&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1778358919845888013:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Non Member&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1778358919737839627:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;RoundTrip&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1778358919750131724:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Member&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1778358919845888013:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Non Member&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[yr:start_date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Ronde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University / des Pins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gare Canora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clark / Evans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murray / William&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Island / Centre&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milton / Clark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Place du Commerce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Square Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria Hall&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Milton / University&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann / William&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marché Atwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Square St-Louis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ottawa / William&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parc Plage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congres&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de la Commune / King&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greene / Workman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Square Phillips&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nazareth / William&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Place Longueuil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-André / Robin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trips' id='trips_2E18EF021E194A62979D018F45A6F141'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[trips].[start_station_code]' />
                    <expression op='[stations].[code]' />
                  </expression>
                </clause>
                <relation connection='mysql.1wr8us515t9i1z12vurl81gnlkjf' name='trips' table='[trips]' type='table' />
                <relation connection='mysql.1wr8us515t9i1z12vurl81gnlkjf' name='stations' table='[stations]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_CDA0D1047776431EA7ECC1D982D4C4E3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard=' interactive reporting dashboard' type='sheet' worksheet='Flat Rate Revenue Broken down by hours per day of week' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value=' interactive reporting dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_6D1ABBA935BB43C2B833BF5E356A121D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard=' interactive reporting dashboard' type='sheet' worksheet='Average trip duration per station across the city' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value=' interactive reporting dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_0CE5C604A339415F96D73450A1B2A933]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard=' interactive reporting dashboard' type='sheet' worksheet='Top stations by revenue ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value=' interactive reporting dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_5A85868223764E739D6BD5786D5836DD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard=' interactive reporting dashboard' type='sheet' worksheet='percentage of trips Per Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value=' interactive reporting dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average trip duration per station across the city'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='AvenirNext' fontsize='12'>Average trip duration per station across the city</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Members' datatype='string' name='[Calculation_1778358919750131724]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=1 THEN &quot;Member&quot; END' />
              <aliases>
                <alias key='%null%' value='Non Members' />
              </aliases>
            </column>
            <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
            </column>
            <column caption='Duration Min' datatype='real' name='[Calculation_1778358921235402792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column-instance column='[Calculation_1778358921235402792]' derivation='Avg' name='[avg:Calculation_1778358921235402792:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_code]' derivation='None' name='[none:start_station_code:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Members,Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0CE5C604A339415F96D73450A1B2A933]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1778358919750131724]' />
              <groupfilter function='level-members' level='[name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CDA0D1047776431EA7ECC1D982D4C4E3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1778358919845888013]' />
              <groupfilter function='level-members' level='[hr:start_date:ok]' />
              <groupfilter function='level-members' level='[wd:start_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (YEAR(Start Date),MONTH(Start Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_5A85868223764E739D6BD5786D5836DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='level-members' level='[mn:start_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Members,Name)]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (YEAR(Start Date),MONTH(Start Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:latitude:qk]' field-type='quantitative' max='5721909.4939489942' min='5669000.0701492066' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:longitude:qk]' field-type='quantitative' max='-8162372.8840713631' min='-8215436.1155677103' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:Calculation_1778358921235402792:qk]' />
              <size column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:Calculation_1778358921235402792:qk]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:start_station_code:ok]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='690' />
                <format attr='maxwidth' value='690' />
                <format attr='minheight' value='688' />
                <format attr='maxheight' value='688' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:latitude:qk]</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B2FEC2CA-1EF1-4061-8AA7-94E178B6FF69}' />
    </worksheet>
    <worksheet name='Distribution of all trips by duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='AvenirNext' fontsize='12'>Distribution of all trips by duration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Duration Min' datatype='real' name='[Calculation_1778358921235402792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Duration Min (bin)' datatype='integer' name='[TEST (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_1778358921235402792]' peg='0' size='2.3' />
            </column>
            <column-instance column='[Calculation_1778358921235402792]' derivation='Count' name='[cnt:Calculation_1778358921235402792:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[TEST (bin)]' derivation='None' name='[none:TEST (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]' value='Membership Status '>
              <formatted-text>
                <run>Membership Status </run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358921235402792:qk]</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:TEST (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[TEST (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{B9AB4896-E542-4C93-8624-8F5E13D991BD}' />
    </worksheet>
    <worksheet name='Flat Rate Revenue Broken down by hours per day of week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='AvenirNext' fontsize='10'>Flat Rate Revenue Broken down by hours per day of week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Members' datatype='string' name='[Calculation_1778358919750131724]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=1 THEN &quot;Member&quot; END' />
              <aliases>
                <alias key='%null%' value='Non Members' />
              </aliases>
            </column>
            <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
            </column>
            <column caption='2.99$' datatype='real' name='[Calculation_1778358921195110436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 30 THEN 2.99  END' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1778358919845888013]' derivation='None' name='[none:Calculation_1778358919845888013:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Week-Trunc' name='[twk:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Members,Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0CE5C604A339415F96D73450A1B2A933]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1778358919750131724]' />
              <groupfilter function='level-members' level='[name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Name,Start Station Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_6D1ABBA935BB43C2B833BF5E356A121D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[name]' />
              <groupfilter function='level-members' level='[start_station_code]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (YEAR(Start Date),MONTH(Start Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_5A85868223764E739D6BD5786D5836DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='level-members' level='[mn:start_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Exclusions (Non Members,WEEK(Start Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Calculation_1778358919845888013:nk]' />
                <groupfilter function='level-members' level='[twk:start_date:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Calculation_1778358919845888013:nk]' member='%null%' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-04-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-04-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-04-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-05-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-05-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-05-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-05-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-05-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-06-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-06-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-06-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-06-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-07-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-07-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-07-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-07-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-07-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-08-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-08-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-08-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-08-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-09-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-09-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-09-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-09-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-10-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-10-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-10-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-10-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-10-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-11-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2016-11-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-04-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-04-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-04-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-04-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-05-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-05-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-05-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-05-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-06-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-06-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-06-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-06-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-07-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-07-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-07-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-07-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-07-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-08-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-08-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-08-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-08-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-09-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-09-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-09-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-09-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-10-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-10-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-10-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-10-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-10-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-11-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:start_date:qk]' member='#2017-11-12 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1778358919845888013:nk]' />
              <groupfilter function='empty-level' member='[none:Calculation_1778358919845888013:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Exclusions (Non Members,WEEK(Start Date))]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Name,Start Station Code)]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Members,Name)]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (YEAR(Start Date),MONTH(Start Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' value='212' />
            <format attr='width' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[hr:start_date:ok]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]' />
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kodhn70nlobl51b7p4251q4ikn0].[wd:start_date:ok] * [federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk])</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[hr:start_date:ok]</cols>
      </table>
      <simple-id uuid='{6197221C-F0BA-4C15-84AA-38D40F52BDB7}' />
    </worksheet>
    <worksheet name='Percentage of Monthly  Trip by Members '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Monthly  Trip by Memebrs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Percentage trip by memebrs' datatype='integer' name='[Calculation_1778358919574630405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [is_member] = 1 : COUNT([__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141])}' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column caption='Members' datatype='string' name='[Calculation_1778358919750131724]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=1 THEN &quot;Member&quot; END' />
              <aliases>
                <alias key='%null%' value='Non Members' />
              </aliases>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1778358919750131724]' derivation='Count' name='[cnt:Calculation_1778358919750131724:qk]' pivot='key' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1778358919750131724]' derivation='None' name='[none:Calculation_1778358919750131724:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[pcto:sum:Calculation_1778358919574630405:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1778358919574630405]' derivation='Sum' name='[sum:Calculation_1778358919574630405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='member' level='[yr:start_date:ok]' member='2016' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358919574630405:qk]' scope='rows' value='Trips' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]' value='Membership Status&#10;'>
              <formatted-text>
                <run>Membership Status&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919750131724:qk]' />
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358919574630405:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358919574630405:qk]</rows>
        <cols>([federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok] / [federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok])</cols>
      </table>
      <simple-id uuid='{0B808A36-90DF-48E2-965C-330983A45B2B}' />
    </worksheet>
    <worksheet name='Round trips and percentage of member trips by station'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='AvenirNext' fontsize='12'>Round trips and percentage of member trips by station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Round Trips' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1778358919737839627]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN &apos;RoundTrip&apos; END' />
            </column>
            <column caption='percentage of round trips ' datatype='real' name='[Calculation_1778358920648392721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1778358919737839627])/COUNT([__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141])*100' />
            </column>
            <column caption='Calculation1' datatype='real' name='[Calculation_1778358921014439962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([is_member])/COUNT([is_member])*100' />
            </column>
            <column caption='[Calculation1]/100' datatype='real' name='[Calculation_1778358921019039776]' role='measure' type='quantitative' user:unnamed='Sheet 6 (2)'>
              <calculation class='tableau' formula='[Calculation_1778358921014439962]/100' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column caption='[percentage of round trips ]/100' datatype='real' name='[Calculation_1778358921019060257]' role='measure' type='quantitative' user:unnamed='Sheet 6 (2)'>
              <calculation class='tableau' formula='[Calculation_1778358920648392721]/100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_code]' derivation='None' name='[none:start_station_code:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1778358921019039776]' derivation='User' name='[usr:Calculation_1778358921019039776:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1778358921019060257]' derivation='User' name='[usr:Calculation_1778358921019060257:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019039776:qk]' scope='cols' value='Percentage of Trips by Memebrs' />
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019060257:qk]' scope='rows' value='percentage of Round Trips' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019039776:qk]' value='' />
            <format attr='text-format' data-class='total' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019039776:qk]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019039776:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019060257:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:start_station_code:ok]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019060257:qk]</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358921019039776:qk]</cols>
      </table>
      <simple-id uuid='{C9360237-9AC4-42F8-85B9-A02BAF84B425}' />
    </worksheet>
    <worksheet name='Top stations by revenue '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stations Revenue </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Round Trips' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1778358919737839627]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN &apos;RoundTrip&apos; END' />
            </column>
            <column caption='Members' datatype='string' name='[Calculation_1778358919750131724]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=1 THEN &quot;Member&quot; END' />
              <aliases>
                <alias key='%null%' value='Non Members' />
              </aliases>
            </column>
            <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
            </column>
            <column caption='Revenue ' datatype='real' name='[Calculation_1778358921406799914]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 30 Then 2.99&#13;&#10;ELSEIF  [duration_sec]/60 &lt;= 45 AND [duration_sec]/60 &gt;30 THEN 4.79 &#13;&#10;ELSEIF [duration_sec]/60 &lt;= 60 AND [duration_sec]/60 &gt;45 THEN 7.79  END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1778358919750131724]' derivation='None' name='[none:Calculation_1778358919750131724:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1778358921406799914]' derivation='Sum' name='[sum:Calculation_1778358921406799914:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Name,Start Station Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_6D1ABBA935BB43C2B833BF5E356A121D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[name]' />
              <groupfilter function='level-members' level='[start_station_code]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CDA0D1047776431EA7ECC1D982D4C4E3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1778358919845888013]' />
              <groupfilter function='level-members' level='[hr:start_date:ok]' />
              <groupfilter function='level-members' level='[wd:start_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (YEAR(Start Date),MONTH(Start Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_5A85868223764E739D6BD5786D5836DD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:start_date:ok]' />
              <groupfilter function='level-members' level='[mn:start_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921406799914:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Name,Start Station Code)]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (YEAR(Start Date),MONTH(Start Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919737839627:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk] / [federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk])</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921406799914:qk]</cols>
      </table>
      <simple-id uuid='{0B6F6340-CE02-486B-BE05-8D77E3E89B4D}' />
    </worksheet>
    <worksheet name='Total Number of Monthly Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000cc' fontname='Tableau Medium' fontsize='9'>Total Number of Monthly Trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]'>
            <groupfilter function='level-members' level='[mn:start_date:ok]' />
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' scope='rows' value='Total Trips' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' value='76' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]&#10;[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' value='Total Number of Monthly Trips'>
              <formatted-text>
                <run>Total Number of Monthly Trips</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]' />
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' />
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]</cols>
      </table>
      <simple-id uuid='{38A538AB-F6D3-487E-A204-8AD83FAC2836}' />
    </worksheet>
    <worksheet name='percentage of trips Per Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='AvenirNext' fontsize='12'>percentage of trips Per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Members' datatype='string' name='[Calculation_1778358919750131724]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=1 THEN &quot;Member&quot; END' />
              <aliases>
                <alias key='%null%' value='Non Members' />
              </aliases>
            </column>
            <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]' />
                <sort direction='DESC' using='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:code:qk]' />
              </table-calc>
            </column-instance>
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[code]' derivation='Sum' name='[sum:code:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Members,Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0CE5C604A339415F96D73450A1B2A933]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1778358919750131724]' />
              <groupfilter function='level-members' level='[name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Name,Start Station Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_6D1ABBA935BB43C2B833BF5E356A121D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[name]' />
              <groupfilter function='level-members' level='[start_station_code]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CDA0D1047776431EA7ECC1D982D4C4E3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1778358919845888013]' />
              <groupfilter function='level-members' level='[hr:start_date:ok]' />
              <groupfilter function='level-members' level='[wd:start_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]'>
            <groupfilter function='level-members' level='[mn:start_date:ok]' />
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Non Members,HOUR(Start Date),WEEKDAY(Start Date))]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Name,Start Station Code)]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Action (Members,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' value='YEAR'>
              <formatted-text>
                <run>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:cnt:trips_2E18EF021E194A62979D018F45A6F141:qk:10]' />
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]</rows>
        <cols>([federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok] / [federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok])</cols>
      </table>
      <simple-id uuid='{37C10C64-4708-4F5A-9D4C-85CA1240E9F7}' />
    </worksheet>
    <worksheet name='revenue generated by non  member trip'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='AvenirNext' fontsize='12'>Revenue generated by non-member trip</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
            </column>
            <column caption='2.99$' datatype='real' name='[Calculation_1778358921195110436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 30 THEN 2.99  END' />
            </column>
            <column caption='4.79$' datatype='real' name='[Calculation_1778358921227604006]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 45 AND [duration_sec]/60 &gt;30 THEN 4.79  END' />
            </column>
            <column caption='7.79$' datatype='real' name='[Calculation_1778358921228005415]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 60 AND [duration_sec]/60 &gt;45 THEN 7.79  END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1778358919845888013]' derivation='None' name='[none:Calculation_1778358919845888013:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1778358921227604006]' derivation='Sum' name='[sum:Calculation_1778358921227604006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1778358921228005415]' derivation='Sum' name='[sum:Calculation_1778358921228005415:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921227604006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921228005415:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1778358919845888013:nk]' />
              <groupfilter function='member' level='[none:Calculation_1778358919845888013:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Multiple Values]' scope='rows' value='Generated Income' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' value='168' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Multiple Values]' value='C4105%' />
            <format attr='display' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' />
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[Multiple Values]</rows>
        <cols>([federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk] / [federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{FB00E82B-EA0A-47B8-8C3E-9BAD381638ED}' />
    </worksheet>
    <worksheet name='revenue generated by non  member trip (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='AvenirNext' fontsize='12'>Revenue generated by member / non-member trip</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Non Members' datatype='string' name='[Calculation_1778358919845888013]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member] = 0 THEN &apos;Non Member&apos; END' />
            </column>
            <column caption='2.99$' datatype='real' name='[Calculation_1778358921195110436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 30 THEN 2.99  END' />
            </column>
            <column caption='4.79$' datatype='real' name='[Calculation_1778358921227604006]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 45 AND [duration_sec]/60 &gt;30 THEN 4.79  END' />
            </column>
            <column caption='7.79$' datatype='real' name='[Calculation_1778358921228005415]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [duration_sec]/60 &lt;= 60 AND [duration_sec]/60 &gt;45 THEN 7.79  END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1778358919845888013]' derivation='None' name='[none:Calculation_1778358919845888013:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[pcto:sum:Calculation_1778358921195110436:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1778358921227604006]' derivation='Sum' name='[pcto:sum:Calculation_1778358921227604006:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1778358921228005415]' derivation='Sum' name='[pcto:sum:Calculation_1778358921228005415:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1778358921195110436]' derivation='Sum' name='[sum:Calculation_1778358921195110436:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1778358921227604006]' derivation='Sum' name='[sum:Calculation_1778358921227604006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1778358921228005415]' derivation='Sum' name='[sum:Calculation_1778358921228005415:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921195110436:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921227604006:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[pcto:sum:Calculation_1778358921228005415:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921227604006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921228005415:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kodhn70nlobl51b7p4251q4ikn0].[__tableau_internal_object_id__].[cnt:trips_2E18EF021E194A62979D018F45A6F141:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1778358919845888013:nk]' />
              <groupfilter function='empty-level' member='[none:Calculation_1778358919845888013:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]</column>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' value='auto' />
            <format attr='width' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' value='224' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Multiple Values]' value='C4105%' />
            <format attr='display' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]' />
              <lod column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]' />
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</cols>
      </table>
      <simple-id uuid='{A7A2C90C-C7FC-4273-99D3-F93DAD492D96}' />
    </worksheet>
    <worksheet name='top 10 stations by percentage of round trips.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>top 10 stations by the percentage of round trips.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi-data)' name='federated.0kodhn70nlobl51b7p4251q4ikn0' />
          </datasources>
          <datasource-dependencies datasource='federated.0kodhn70nlobl51b7p4251q4ikn0'>
            <column caption='Round Trips' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_1778358919737839627]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN &apos;RoundTrip&apos; END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column caption='percentage of round trips ' datatype='real' name='[Calculation_1778358920648392721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1778358919737839627])/COUNT([__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141])*100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_2E18EF021E194A62979D018F45A6F141]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1778358919737839627]' derivation='Count' name='[cnt:Calculation_1778358919737839627:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1778358920648392721]' derivation='User' name='[usr:Calculation_1778358920648392721:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Calculation_1778358919737839627])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919737839627:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919737839627:qk]' value='55' />
            <format attr='title' class='0' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919737839627:qk]' scope='cols' value='Total Round Trips' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' value='49' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0kodhn70nlobl51b7p4251q4ikn0].[usr:Calculation_1778358920648392721:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</rows>
        <cols>[federated.0kodhn70nlobl51b7p4251q4ikn0].[cnt:Calculation_1778358919737839627:qk]</cols>
      </table>
      <simple-id uuid='{A13AF394-4DA2-4151-844C-2BDB3C551512}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name=' interactive reporting dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='51500' x='800' y='1000'>
              <zone h='49000' id='9' name='percentage of trips Per Month' w='51500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Top stations by revenue ' w='51500' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='469' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='46900' x='52300' y='1000'>
              <zone h='49000' id='13' name='Average trip duration per station across the city' w='46900' x='52300' y='1000'>
                <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='722' maxwidth='692' minheight='722' minwidth='692' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='3' name='Flat Rate Revenue Broken down by hours per day of week' w='46900' x='52300' y='50000'>
                <layout-cache cell-count-w='24' minheight='772' non-cell-size-w='111' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='percentage of trips Per Month' w='51500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='Average trip duration per station across the city' w='46900' x='52300' y='1000'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='722' maxwidth='692' minheight='722' minwidth='692' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Top stations by revenue ' w='51500' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Flat Rate Revenue Broken down by hours per day of week' w='46900' x='52300' y='50000'>
                  <layout-cache cell-count-w='24' minheight='772' non-cell-size-w='111' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D7A71340-3662-4612-BB22-7273EA13E424}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Number of Monthly Trips' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='5' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[tyr:start_date:ok]&#10;[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9ADA79D-0AC5-40DF-B69B-B991C94CD490}' />
    </window>
    <window class='worksheet' name='percentage of trips Per Month' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[mn:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{295D656B-71E1-4B68-B688-536B25EBF756}' />
    </window>
    <window class='worksheet' name='Percentage of Monthly  Trip by Members ' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{492191DE-547E-472C-B3D4-9F1DABDDD7CD}' />
    </window>
    <window class='worksheet' name='top 10 stations by percentage of round trips.' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919737839627:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3197C86-A470-4B38-8BFE-EB09FA4DD8A0}' />
    </window>
    <window class='worksheet' name='Round trips and percentage of member trips by station' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:start_station_code:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0D3698B8-697F-4F85-8401-D5FCA1E45283}' />
    </window>
    <window class='worksheet' name='Distribution of all trips by duration' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FAAC4E08-7BF5-4686-ABFE-EFF912A1A93D}' />
    </window>
    <window class='worksheet' name='Average trip duration per station across the city' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='165'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:Calculation_1778358921235402792:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:Calculation_1778358921235402792:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[avg:Calculation_1778358921235402792:qk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:end_station_code:ok]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:start_station_code:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{17FB5B9F-2ABA-4E33-9E7B-E70DA445FC74}' />
    </window>
    <window class='worksheet' name='revenue generated by non  member trip' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1ED8A899-1E7F-4F55-B22D-3C94AB6B588C}' />
    </window>
    <window class='worksheet' name='revenue generated by non  member trip (3)' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:is_member:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AAD59A83-2037-42AB-A088-AB1634EB698D}' />
    </window>
    <window class='worksheet' maximized='true' name='Flat Rate Revenue Broken down by hours per day of week' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[sum:Calculation_1778358921195110436:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[:Measure Names]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[hr:start_date:ok]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919845888013:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[tdy:start_date:ok]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[tdy:start_date:qk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[wd:start_date:ok]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63DB6F88-E362-4255-BEC7-6A1053767FE0}' />
    </window>
    <window class='worksheet' name='Top stations by revenue ' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:Calculation_1778358919750131724:nk]</field>
            <field>[federated.0kodhn70nlobl51b7p4251q4ikn0].[none:name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{38163B54-C631-4DB8-AFAF-055F9EB9B895}' />
    </window>
    <window class='dashboard' name=' interactive reporting dashboard' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='Average trip duration per station across the city'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Flat Rate Revenue Broken down by hours per day of week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top stations by revenue ' />
        <viewpoint name='percentage of trips Per Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{36CE5ED9-8FBF-4F71-99E8-E2325F1AA62C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' interactive reporting dashboard' width='192'>
      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
      5XbPtfv/Afsx0OB1EIlJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average trip duration per station across the city' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution of all trips by duration' width='192'>
      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
      Ly1pdQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Flat Rate Revenue Broken down by hours per day of week' width='192'>
      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
      4P8A9rznNn5ch0QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of Monthly  Trip by Members ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Round trips and percentage of member trips by station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top stations by revenue ' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Number of Monthly Trips' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='percentage of trips Per Month' width='192'>
      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
      I5RMh4hRR/lDpNJpyqUSPfEwhmHg8x1+G81WXZd9ozvn2vhY4/HYJ+vroifYeFJX1Q+zJ/jJ
      vqm77Anevq6ai2sba9rObWy56gneuY1d9RM/tW+bcp3g1OAIqcERN0OEONLkl+GEp0kAhKdJ
      AISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCE
      p7luiZxfzjKQ7CZbsogYNsofJhwIYNs2sVi0VfMUoiVcBUD3+ShlM8wrCGiKvA44Be4trDDx
      /EVs6QlucK7SE9yII9cTXC2XcbBRtsW6Wd84AgRCDA4OUioVScSS0hPc0FylJ7gRR64nOJ7o
      4ysX+9wMEeJIkzfBwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLT
      JADC0yQAwtMkAMLTjmwAlFJ88sknAExNTVGtVnn//fdZWFhgamqKbDbb5hmKTtDyzpV8Pk9X
      Vxe5XA7DMCgUCkQiERzHIRqNEgzufTnu6elp5ubmOHv2LACZTIbFxUXu3LlDMpkkGAzyrW99
      C8Nw11AixHauAmBWSjxcWCadTJArWUR8Gz3BkUCQumPTFY/tWD6bzfLzn/+cH/7wh7z//vsE
      AgFWVlY4efIks7OzHDt2jMuXL6Pv0dlUKpVYWloik8kwNzdHIpGgu7ubS5cuYZomH330EdVq
      lWhU+pDF/rnsCfYT8sFipkhQV5TqQKXM9MMlnrt0ZVdP8Keffko+nyeTyWz1diaTScrlMuPj
      43z88ccMDw+TTqd31ZqcnGRychKAb3zjG7v+//jx4wBbtaQnuLGx0hO8k6sA5FYesVqskYhC
      vlwn4tu4TvDI2CilQoHuSN+OvtMXX3yRS5cu4TgO169fxzAMKpUKiUQCpRQTExN0dXXtOgKY
      //dv2CufNjQn/5nv4DtxQ3qCGxwrPcE7uQpAcmic5FBjy348s8zCWuFz/je/7e9rjPd3c2Ys
      uXVL/eFvsGffbaiOnjyF78SNxiYlxFNa9ib4Fx/N8NbvZhta9vsvn9kRACEOy5E9DSrEYZAA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhP
      c9cTXC2TLVSI+mGt+KQnOBoMUnccurvirZqnEC3hKgC+QBC7vk6uWkdXioqlgZlj5vYC565c
      29ET7KZ/8yB9o8pRO/pGpSf4i8dKT/BO7q4UXyqwsPCIVF8PxZpNxKij/GHGT5yglM/T1d+3
      r/7Np/tGTTdjdW1nb670BH/hWOkJ3slVAMLxBFcuX3IzRIgjTd4EC0+TAAhPkwAIT5MACE+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPO9AVYh7MTKH8IaKBII7u
      oz/V26x5CXEoDnAEUBiBMAZ17t25QyTe1bxZCXFIDhAADZ/m4AvGOH/xIla52LxZCXFIfLDR
      p1ksun8AR7t6tv7u929cBb5cLgNwdqSLkDHa0P2c7I9SKBRQSqFpGtbQ13EiYw2NrcdOYW6r
      +9KZFGeGYl8yakMyZuyoa576c5TZ2HZwjF70bXW/fXkUp8EeXT918vnHV8q0Tcxzf9XQOABl
      KiyrtNEeaDu8eqWxbQxQLpWoPW5nVMSwGq1rBGDbup4eiDVc9+RQfOe+7b+G42vspXI9cXbH
      vr18so+R3mBDYwe7Azv37fFXUQOZXcv9P7tVo8KKoaXvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='revenue generated by non  member trip' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='144' name='revenue generated by non  member trip (3)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='top 10 stations by percentage of round trips.' width='192'>
      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
      14zBLwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
